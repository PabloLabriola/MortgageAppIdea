version: '3.4'

services:
  jaeger:
    image: jaegertracing/all-in-one:1.22
    hostname: jaeger.docker
    ports:
      - "6831:6831/udp"
      - "16686:16686"
    networks:
      - network-eureka
    environment:
      eureka.client.serviceUrl.defaultZone: http://service-discovery:8761/eureka/

  config-server:
    image: local/config
    ports:
      - "8888:8888"
    networks:
      - network-eureka

  service-discovery:
    image: local/discovery
    depends_on:
      - config-server
    ports:
      - "8761:8761"
    networks:
      - network-eureka
    environment:
      SPRING_APPLICATION_JSON: '{"spring": {"cloud": {"config": {"uri": "http://config-server:8888"}}}}'
      eureka.client.serviceUrl.defaultZone: http://service-discovery:8761/eureka/

  service-feasibility:
    image: local/feasibility
    depends_on:
      - config-server
      - service-discovery
      - jaeger
      - rabbitmq
      - kafka
    networks:
      - network-eureka
    environment:
      SPRING_APPLICATION_JSON: '{"spring": {"cloud": {"config": {"uri": "http://config-server:8888"}}}}'
      eureka.client.serviceUrl.defaultZone: http://service-discovery:8761/eureka/

  service-company:
    image: local/company
    depends_on:
      - config-server
      - service-discovery
      - jaeger
    networks:
      - network-eureka
    environment:
      SPRING_APPLICATION_JSON: '{"spring": {"cloud": {"config": {"uri": "http://config-server:8888"}}}}'
      eureka.client.serviceUrl.defaultZone: http://service-discovery:8761/eureka/

  service-gateway:
    image: local/gateway
    hostname: gateway.docker
    ports:
      - "8760:8760"
    depends_on:
      - config-server
      - service-discovery
      - jaeger
    environment:
      SPRING_APPLICATION_JSON: '{"spring": {"cloud": {"config": {"uri": "http://config-server:8888"}}}}'
      eureka.client.serviceUrl.defaultZone: http://service-discovery:8761/eureka/
    networks:
      - network-eureka
  
  service-fees:
    image: local/fees
    depends_on:
      - config-server
      - jaeger
      - kafka
    networks:
      - network-eureka
    environment:
      SPRING_APPLICATION_JSON: '{"spring": {"cloud": {"config": {"uri": "http://config-server:8888"}}}}'
      
  service-feesbatchreport:
    image: local/feesbatchreport
    depends_on:
      - config-server
      - jaeger
      - kafka
    networks:
      - network-eureka
    environment:
      SPRING_APPLICATION_JSON: '{"spring": {"cloud": {"config": {"uri": "http://config-server:8888"}}}}'
      
  service-legal:
    image: local/legal
    depends_on:
      - config-server
      - jaeger
      - rabbitmq
    networks:
      - network-eureka
    environment:
      SPRING_APPLICATION_JSON: '{"spring": {"cloud": {"config": {"uri": "http://config-server:8888"}}}}'
      eureka.client.serviceUrl.defaultZone: http://service-discovery:8761/eureka/
      
  prometheus:
    image: prom/prometheus:v2.28.1
    hostname: prometheus.docker
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
    networks:
      - network-eureka
    environment:
      eureka.client.serviceUrl.defaultZone: http://service-discovery:8761/eureka/
  grafana:
    image: grafana/grafana:7.5.10
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    networks:
       - network-eureka
    environment:
      eureka.client.serviceUrl.defaultZone: http://service-discovery:8761/eureka/
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - '5672:5672'
      - '15672:15672'
    networks:
      - network-eureka
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - 22181:2181
    networks:
      - network-eureka
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    networks:
      - network-eureka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
networks:
  network-eureka:
    driver: bridge